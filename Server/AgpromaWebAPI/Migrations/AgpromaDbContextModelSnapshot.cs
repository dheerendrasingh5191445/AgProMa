// <auto-generated />
using AgpromaWebAPI.model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AgpromaWebAPI.Migrations
{
    [DbContext(typeof(AgpromaDbContext))]
    partial class AgpromaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgpromaWebAPI.model.ChecklistBacklog", b =>
                {
                    b.Property<int>("ChecklistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChecklistName");

                    b.Property<int>("CompletedSize");

                    b.Property<int>("RemainingSize");

                    b.Property<int>("Size");

                    b.Property<bool>("Status");

                    b.Property<int>("TaskId");

                    b.HasKey("ChecklistId");

                    b.HasIndex("TaskId");

                    b.ToTable("Checklists");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.EpicMaster", b =>
                {
                    b.Property<int>("EpicId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("ProjectId");

                    b.HasKey("EpicId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EpicDb");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.ProjectMaster", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApprovedBy");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Milestone");

                    b.Property<string>("ModeOfOperation");

                    b.Property<string>("Name");

                    b.Property<string>("ProjectDescription");

                    b.Property<string>("ReviewedBy");

                    b.Property<int>("Rhythm");

                    b.Property<string>("TechnologyUsed");

                    b.Property<int>("Velocity");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.Projectmembers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActAs");

                    b.Property<int>("MemberId");

                    b.Property<int>("ProjectId");

                    b.HasKey("id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Projectmembers");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.ReleasePlan", b =>
                {
                    b.Property<int>("ReleasePlansanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Days");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Goal");

                    b.Property<int>("Increment");

                    b.Property<int>("ProjectId");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("ReleaseName");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.HasKey("ReleasePlansanId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ReleasePlans");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.SignalRMaster", b =>
                {
                    b.Property<int>("SignalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionId");

                    b.Property<int>("HubCode");

                    b.Property<int>("MemberId");

                    b.Property<bool>("Online");

                    b.HasKey("SignalId");

                    b.ToTable("SignalRDb");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.Sprint", b =>
                {
                    b.Property<int>("SprintId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActualSize");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("Increment");

                    b.Property<int>("PlannedSize");

                    b.Property<int>("ProjectId");

                    b.Property<int?>("ReleasePlansanId");

                    b.Property<string>("SprintGoal");

                    b.Property<string>("SprintName");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.Property<int>("TotalDays");

                    b.HasKey("SprintId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ReleasePlansanId");

                    b.ToTable("Sprints");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.Sprint_UserStory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SprintId");

                    b.Property<int>("StoryId");

                    b.HasKey("Id");

                    b.HasIndex("SprintId");

                    b.HasIndex("StoryId");

                    b.ToTable("Sprint_UserStory");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TaskBacklog", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActualEndDate");

                    b.Property<int>("ActualSize");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("PlannedSize");

                    b.Property<int>("Remaining");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.Property<int>("StoryId");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("TaskId");

                    b.HasIndex("StoryId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TaskBurnDown", b =>
                {
                    b.Property<int>("TaskBurnDownId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CheckListId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("PointCompleted");

                    b.Property<int>("PointRemaining");

                    b.Property<int>("TaskId");

                    b.Property<int>("UserId");

                    b.HasKey("TaskBurnDownId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskBurnDowns");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TeamMaster", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProjectId");

                    b.Property<string>("TeamName");

                    b.HasKey("TeamId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MemberId");

                    b.Property<int>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Teammembers");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Department");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Organization");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.UserStory", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActualSize");

                    b.Property<string>("Comments");

                    b.Property<int>("PlannedSize");

                    b.Property<int>("Priority");

                    b.Property<int>("ProjectId");

                    b.Property<string>("Rationale");

                    b.Property<int>("Status");

                    b.Property<string>("StoryName");

                    b.Property<int>("UserId");

                    b.HasKey("StoryId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Userstories");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.ChecklistBacklog", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.TaskBacklog", "TaskBacklog")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.EpicMaster", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.ProjectMaster", "ProjectMaster")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.Projectmembers", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.ProjectMaster", "ProjectMaster")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.ReleasePlan", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.ProjectMaster", "ProjectMaster")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.Sprint", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.ProjectMaster", "ProjectMaster")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgpromaWebAPI.model.ReleasePlan")
                        .WithMany("Sprints")
                        .HasForeignKey("ReleasePlansanId");
                });

            modelBuilder.Entity("AgpromaWebAPI.model.Sprint_UserStory", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.Sprint", "Sprint")
                        .WithMany()
                        .HasForeignKey("SprintId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgpromaWebAPI.model.UserStory", "Story")
                        .WithMany()
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TaskBacklog", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.UserStory", "Story")
                        .WithMany("Tasks")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TaskBurnDown", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.TaskBacklog", "TaskBacklog")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TeamMaster", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.ProjectMaster", "ProjectMaster")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.TeamMember", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.TeamMaster", "TeamMaster")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgpromaWebAPI.model.UserStory", b =>
                {
                    b.HasOne("AgpromaWebAPI.model.ProjectMaster", "ProjectMaster")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
